{"doc":"","fields":[],"enumConstants":[],"methods":[{"name":"createLectureDate","paramTypes":["de.digitra.uniplaner.domain.LectureDate"],"doc":"\n {@code POST  /lecturedates} : Methode erstellt eine Ressource vom Typ LectureDate.\r\n\r\n @param lecturedate Instanz von LectureDate, die am Server erstellt werden soll.\r\n @return Eine {@link ResponseEntity} mit Status Code {@code 200 (OK)} und im Body die erstellte Ressource.\r\n @throws BadRequestException falls lecturedate nicht zulässig ist.\r\n"},{"name":"updateLectureDate","paramTypes":["de.digitra.uniplaner.domain.LectureDate"],"doc":"\n {@code PUT  /lecturedates} : aktualisiert eine existierende Ressource vom Typ LectureDate.\r\n\r\n @param lecturedate Instanz von LectureDate, die am Server aktualisiert werden soll.\r\n                    Diese Instanz enthält die aktuellen Werte.\r\n @return Eine {@link ResponseEntity} mit Status Code {@code 200 (OK)} and im Body die aktualisierte Ressource.\r\n @throws BadRequestException wird ausgelöst, falls lecturedate nicht zulässig ist.\r\n"},{"name":"updateLectureDate","paramTypes":["java.lang.Long","de.digitra.uniplaner.domain.LectureDate"],"doc":"\n {@code PUT  /lecturedates/:id} : aktualisiert eine existierende Ressource vom Typ LectureDate.\r\n\r\n @param id                 Id der Ressource vom Typ LectureDate, die am Server aktualisiert werden soll.\r\n @param lecturedateDetails Instanz von LectureDate, die am Server aktualisiert werden soll.\r\n                           Diese Instanz enthält die aktuellen Werte.\r\n @return Eine {@link ResponseEntity} mit Status Code {@code 200 (OK)} and im Body die aktualisierte Ressource.\r\n @throws ResourceNotFoundException wird ausgelöst, falls die Ressource mit der angegebenen Id nicht gefunden werden konnte.\r\n"},{"name":"getAlllecturedates","paramTypes":[],"doc":"\n {@code GET  /lecturedates} : Liefert eine Liste aller am Server gespeicherten Ressourcen vom Typ LectureDate.\r\n\r\n @return Eine {@link ResponseEntity} mit Status Code {@code 200 (OK)} and im Body eine Liste von Ressourcen vom Typ LectureDate.\r\n"},{"name":"getLectureDate","paramTypes":["java.lang.Long"],"doc":"\n {@code GET  /lecturedates/:id} : Liefert die Ressource vom Typ LectureDate mit der angegebenen Id zurück.\r\n\r\n @param id Die Id der Ressource vom Typ LectureDate, die abgerufen werden soll.\r\n @return Eine {@link ResponseEntity} mit Status Code {@code 200 (OK)} und im Body die gesuchte Ressource vom Typ LectureDate.\r\n @throws ResourceNotFoundException wird ausgelöst, falls die Ressource mit der angegebenen Id nicht gefunden werden konnte.\r\n"},{"name":"deleteLectureDate","paramTypes":["java.lang.Long"],"doc":"\n {@code DELETE  /lecturedates/:id} : Mit dieser Methode eine Ressource mit der angegebenen Id gelöscht.\r\n\r\n @param id Die Id der Ressource vom Typ LectureDate, die gelöscht werden soll.\r\n @return Eine {@link ResponseEntity} mit Status Code {@code 204 (NO_CONTENT)}.\r\n"}],"constructors":[]}