{"doc":"","fields":[],"enumConstants":[],"methods":[{"name":"createLecture","paramTypes":["de.digitra.uniplaner.domain.Lecture"],"doc":"\n {@code POST  /lectures} : Methode erstellt eine Ressource vom Typ Lecture.\r\n\r\n @param lecture Instanz von Lecture, die am Server erstellt werden soll.\r\n @return Eine {@link ResponseEntity} mit Status Code {@code 200 (OK)} und im Body die erstellte Ressource.\r\n @throws BadRequestException falls lecture nicht zulässig ist.\r\n"},{"name":"updateLecture","paramTypes":["de.digitra.uniplaner.domain.Lecture"],"doc":"\n {@code PUT  /lectures} : aktualisiert eine existierende Ressource vom Typ Lecture.\r\n\r\n @param lecture Instanz von Lecture, die am Server aktualisiert werden soll.\r\n Diese Instanz enthält die aktuellen Werte.\r\n @return Eine {@link ResponseEntity} mit Status Code {@code 200 (OK)} and im Body die aktualisierte Ressource.\r\n @throws BadRequestException wird ausgelöst, falls lecture nicht zulässig ist.\r\n"},{"name":"updateLecture","paramTypes":["java.lang.Long","de.digitra.uniplaner.domain.Lecture"],"doc":"\n {@code PUT  /lectures/:id} : aktualisiert eine existierende Ressource vom Typ Lecture.\r\n\r\n @param id Id der Ressource vom Typ Lecture, die am Server aktualisiert werden soll.\r\n @param lectureDetails Instanz von Lecture, die am Server aktualisiert werden soll.\r\n Diese Instanz enthält die aktuellen Werte.\r\n @return Eine {@link ResponseEntity} mit Status Code {@code 200 (OK)} and im Body die aktualisierte Ressource.\r\n @throws ResourceNotFoundException wird ausgelöst, falls die Ressource mit der angegebenen Id nicht gefunden werden konnte.\r\n"},{"name":"getAlllectures","paramTypes":[],"doc":"\n {@code GET  /lectures} : Liefert eine Liste aller am Server gespeicherten Ressourcen vom Typ Lecture.\r\n\r\n @return Eine {@link ResponseEntity} mit Status Code {@code 200 (OK)} and im Body eine Liste von Ressourcen vom Typ Lecture.\r\n"},{"name":"getLecture","paramTypes":["java.lang.Long"],"doc":"\n {@code GET  /lectures/:id} : Liefert die Ressource vom Typ Lecture mit der angegebenen Id zurück.\r\n\r\n @param id Die Id der Ressource vom Typ Lecture, die abgerufen werden soll.\r\n @return Eine {@link ResponseEntity} mit Status Code {@code 200 (OK)} und im Body die gesuchte Ressource vom Typ Lecture.\r\n @throws ResourceNotFoundException wird ausgelöst, falls die Ressource mit der angegebenen Id nicht gefunden werden konnte.\r\n"},{"name":"deleteLecture","paramTypes":["java.lang.Long"],"doc":"\n {@code DELETE  /lectures/:id} : Mit dieser Methode eine Ressource mit der angegebenen Id gelöscht.\r\n\r\n @param id Die Id der Ressource vom Typ Lecture, die gelöscht werden soll.\r\n @return Eine {@link ResponseEntity} mit Status Code {@code 204 (NO_CONTENT)}.\r\n"}],"constructors":[]}